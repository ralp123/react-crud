import React, {Component} from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';
//import logo from './logo.svg';
//import './App.css';

class App extends Component {

	constructor(props){
		super(props);

		this.state={
			title: 'React Crud',
			act: 0,
			index: '',
			datas: [],
			clicks: 0
		}
	}

	// componentDidMount(){
	// 	this.refs.title.focus();
	// }

	// componentWillUpdate(nextProps, nextState){
	// 	localStorage.setItem('key11', 'value11')
	// }

	fSubmit = (e) => {
		e.preventDefault();

		let datas = this.state.datas;
		let title = this.refs.title.value;
		let content = this.refs.content.value;

		if(this.state.act === 0){
			let i = this.state.clicks;
			
			let data = {
				title, content
			}
			datas.push(data);

			console.log(datas);

			this.setState({ clicks: this.state.clicks + 1 });

			localStorage.setItem('postData-'+i, JSON.stringify(data))
		}else{
			let index = this.state.index;
			datas[index].title = content;
			datas[index].content = content;
		}

		// this.setState({
		// 	datas: datas,
		// 	act: 0
		// });

		this.refs.myForm.reset();
		this.refs.myForm.focus();
	}

	fRemove = (i) => {
		let datas = this.state.datas;

		datas.splice(i, 1);
		this.setState({
			datas : datas 
		});

		this.refs.myForm.reset();
		this.refs.title.focus();

	}

	fEdit = (i) => {
		let data = this.state.datas[i];
		this.refs.title.value = data.title;
		this.refs.content.value = data.content;

		this.setState({
			act: 1,
			index: i
		});

		this.refs.title.focus();
		// datas.splice(i, 1);
		// this.setState({
		// 	datas : datas 
		// });

		// this.refs.myForm.reset();
		// this.refs.name.focus();

	}

	render() {
		let datas = this.state.datas;
		let postData = JSON.parse(localStorage.getItem('postData-0'));
		let testData = Object.values(localStorage);
		let test_black = JSON.parse(testData[0]);
		const testing_array = {title : "test", content : "test2"}
		//JSON.parse(testData)
		//console.log(test_black.content);
		console.log(testing_array);
		//let i_test = testData.length;
		
		return (
			<div className="App">
				<div className="container ">
					<form ref="myForm" className="" >
						<div className="form-group">
							<label htmlFor="name" className="text-left">Title:</label>
							<input type="text" ref="title" placeholder="Title" className="form-control" id="name"/>
						</div>
						<div className="form-group">
							<label htmlFor="address">Content:</label>
							<input type="text" ref="content"  placeholder="Content" className="form-control" id="address"/>
						</div>
							<button onClick={(e) => this.fSubmit(e)} className="btn btn-primary">Submit</button>
							{/* <button onClick={this.IncrementItem} type="button" className="btn btn-primary">clcik</button> */}
						</form>
				</div>
				<br/>
				{/* <pre>
					{datas.map((data, i) =>
						<li key={i} className="myList">
							{i+2}. {data.name}, {data.address}
							<button onClick={() => this.fEdit(i)} className="btn btn-info">edit</button>
							<button onClick={() => this.fRemove(i)} className="btn btn-danger">remove</button>
						</li>	
					)}
				</pre> */}

				<table className="table table-striped">
					<thead>
						<tr>
							<th>#</th>
							<th>Title</th>
							<th>Content</th>
							<th>Action</th>
						</tr>
					</thead>
					<tbody>
						{/* {datas.map((data, i) =>
							<tr key={i}>
								<td>{i+1}</td>
								<td>{data.title}</td>
								<td>{data.content}</td>
								<td>
									<button onClick={() => this.fEdit(i)} className="btn btn-info btn-sm mr-1">edit</button>
									<button onClick={() => this.fRemove(i)} className="btn btn-danger btn-sm mr-1">remove</button>
								</td>
							</tr>
						)} */}

						{testing_array.map((data) =>
							<tr>	
								<td></td>
							</tr>
						)} 

						<tr >
							{/* { localStorage.getItem('postData-'+i) } */}
							{/* <td>1</td>
							<td>{ postData.title }</td>
							<td>{ postData.content }</td> */}
							{testData} 							
							{/* <td>
								<button onClick={() => this.fEdit(i)} className="btn btn-info btn-sm mr-1">edit</button>
								<button onClick={() => this.fRemove(i)} className="btn btn-danger btn-sm mr-1">remove</button>
							</td> */}
						</tr>

						{/* <tr>
							<td> { localStorage.getItem('postData-'+this.state.clicks) } </td>
							<td> { this.state.clicks } </td>
						</tr> */}

						
					</tbody>
				</table>
			</div>
		);
	}
}

export default App;
